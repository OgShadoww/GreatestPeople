{"ast":null,"code":"var _jsxFileName = \"/Users/orestgalenza/Workspace/github/GreatestPeople/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PopularPeople from '../components/PopularPeople';\nimport HomePanel from '../components/HomePanel';\nimport axios from 'axios';\nimport HomePanelPersons from '../components/HomePanelPersons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  const [selectedPerson, setSelectedPerson] = useState(people[0]);\n  const [occupation, setOccupation] = useState(\"\"); // Update type to make it nullable\n  const [time, setTime] = useState(\"\");\n  const apiUrl = 'http://127.0.0.1:8000/api/persons/';\n  useEffect(() => {\n    axios.get(apiUrl).then(response => {\n      const mathPersons19thCentury = response.data.filter(person => {\n        // Check if occupation includes \"Mathematics\" and if the birth year is in the 19th century (1800 - 1899)\n        return person.occupation.includes(\"Mathematic\") && person.century == 19;\n      });\n      const ancientPhilosophers = response.data.filter(person => {\n        return person.birth_date_before !== 0 && person.occupation.includes(\"Philosopher\");\n      });\n      const japanPeople = response.data.filter(person => {\n        return person.nationality === \"Japan\"; // Added return statement\n      });\n      const writerPeople = response.data.filter(person => {\n        return person.occupation.includes(\"Writer\") && person.century && person.century >= 17 && person.century <= 19;\n      });\n      const athletePeople = response.data.filter(person => {\n        return person.occupation.includes(\"Athlete\");\n      });\n      const panelVar = [{\n        occupation: \"MATHEMATICS\",\n        time: \"19TH CENTURY\",\n        person: mathPersons19thCentury.slice(0, 5)\n      }, {\n        occupation: \"PHILOSOPHERS\",\n        time: \"ANCIENT\",\n        person: ancientPhilosophers.slice(0, 5)\n      }, {\n        occupation: \"PEOPLE\",\n        time: \"JAPAN\",\n        person: japanPeople.slice(0, 5)\n      }, {\n        occupation: \"WRITERS\",\n        time: \"17-19 CENTURIES\",\n        person: writerPeople.slice(0, 5)\n      }, {\n        occupation: \"ATHLETE\",\n        time: \"ALL TIME\",\n        person: athletePeople.slice(0, 5)\n      }];\n      const randomIndex = Math.floor(Math.random() * panelVar.length);\n      const randomlySelectedPanel = panelVar[randomIndex];\n      setSelectedPerson(randomlySelectedPanel.person[0]);\n      setPeople(randomlySelectedPanel.person);\n      setOccupation(randomlySelectedPanel.occupation);\n      setTime(randomlySelectedPanel.time);\n    }).catch(error => {\n      console.error('Error fetching popular people:', error);\n    });\n  }, []);\n  const handlePersonClick = person => {\n    setSelectedPerson(person); // Update the selected person\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lg:flex lg:gap-[30px] lg:w-full lg:h-full lg:pt-[20px] lg:px-[40px] md:flex md:gap-[30px] md:w-full md:h-full md:pt-[20px] md:px-[40px] lg:flex-row md:flex-row flex flex-col gap-[30px] w-full h-full pt-[20px] px-[40px] overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:flex lg:flex-col lg:gap-[20px] md:flex md:flex-col md:gap-[20px] lg:items-start md:items-start flex flex-col items-center gap-[30px]\",\n      children: [/*#__PURE__*/_jsxDEV(HomePanel, {\n        occupation: occupation,\n        time: time,\n        person: selectedPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:flex lg:gap-[20px] md:flex md:gap-[12px] flex gap-[12px] transition-all duration-500\",\n        children: people.map(person => /*#__PURE__*/_jsxDEV(HomePanelPersons, {\n          selected: selectedPerson,\n          person: person,\n          onClick: () => handlePersonClick(person) // Pass the click handler\n        }, person.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:overflow-scroll md:overflow-scroll\",\n      children: /*#__PURE__*/_jsxDEV(PopularPeople, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"SdMWzNBkSH1n/yCU3I6dcOrh+Iw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","PopularPeople","HomePanel","axios","HomePanelPersons","jsxDEV","_jsxDEV","Home","_s","people","setPeople","selectedPerson","setSelectedPerson","occupation","setOccupation","time","setTime","apiUrl","get","then","response","mathPersons19thCentury","data","filter","person","includes","century","ancientPhilosophers","birth_date_before","japanPeople","nationality","writerPeople","athletePeople","panelVar","slice","randomIndex","Math","floor","random","length","randomlySelectedPanel","catch","error","console","handlePersonClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","selected","onClick","id","_c","$RefreshReg$"],"sources":["/Users/orestgalenza/Workspace/github/GreatestPeople/src/pages/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport PopularPeople from '../components/PopularPeople';\nimport HomePanel from '../components/HomePanel';\nimport { IPerson } from '../types/IPerson';\nimport axios from 'axios';\nimport HomePanelPersons from '../components/HomePanelPersons';\nimport { IPanelVar } from '../types/IPalenVar';\n\nconst Home = () => {\n    const [people, setPeople] = useState<IPerson[]>([]);\n    const [selectedPerson, setSelectedPerson] = useState<IPerson>(people[0]);\n    const [occupation, setOccupation] = useState<string | undefined>(\"\"); // Update type to make it nullable\n    const [time, setTime] = useState<string | undefined>(\"\"); \n    const apiUrl = 'http://127.0.0.1:8000/api/persons/';\n\n    useEffect(() => {\n        axios.get<IPerson[]>(apiUrl)\n            .then(response => {\n                const mathPersons19thCentury = response.data.filter(person => {\n                    // Check if occupation includes \"Mathematics\" and if the birth year is in the 19th century (1800 - 1899)\n                    return person.occupation.includes(\"Mathematic\") && person.century == 19;\n                });\n                const ancientPhilosophers = response.data.filter(person => {\n                    return person.birth_date_before !== 0 &&  person.occupation.includes(\"Philosopher\");\n                })\n                const japanPeople = response.data.filter(person => {\n                    return person.nationality === \"Japan\"; // Added return statement\n                });\n                const writerPeople = response.data.filter(person => {\n                    return (person.occupation.includes(\"Writer\") && person.century && person.century >= 17 && person.century <= 19)\n                });\n                const athletePeople = response.data.filter(person => {\n                    return person.occupation.includes(\"Athlete\")\n                });\n\n                const panelVar:IPanelVar[] = [\n                    {\n                        occupation: \"MATHEMATICS\",\n                        time: \"19TH CENTURY\",\n                        person: mathPersons19thCentury.slice(0,5),\n                    },\n                    {\n                        occupation: \"PHILOSOPHERS\",\n                        time: \"ANCIENT\",\n                        person: ancientPhilosophers.slice(0,5),\n                    },\n                    {\n                        occupation: \"PEOPLE\",\n                        time: \"JAPAN\",\n                        person: japanPeople.slice(0,5),\n                    },\n                    {\n                        occupation: \"WRITERS\",\n                        time: \"17-19 CENTURIES\",\n                        person: writerPeople.slice(0,5),\n                    },\n                    {\n                        occupation: \"ATHLETE\",\n                        time: \"ALL TIME\",\n                        person: athletePeople.slice(0,5),\n                    },\n                ]\n                const randomIndex = Math.floor(Math.random() * panelVar.length);\n                const randomlySelectedPanel = panelVar[randomIndex];\n\n                setSelectedPerson(randomlySelectedPanel.person[0])\n                setPeople(randomlySelectedPanel.person)\n                setOccupation(randomlySelectedPanel.occupation)\n                setTime(randomlySelectedPanel.time)\n            })\n            .catch(error => {\n                console.error('Error fetching popular people:', error);\n            });\n    }, []);\n    const handlePersonClick = (person: IPerson) => {\n        setSelectedPerson(person); // Update the selected person\n    };\n\n    return (\n        <div className='lg:flex lg:gap-[30px] lg:w-full lg:h-full lg:pt-[20px] lg:px-[40px] md:flex md:gap-[30px] md:w-full md:h-full md:pt-[20px] md:px-[40px] lg:flex-row md:flex-row flex flex-col gap-[30px] w-full h-full pt-[20px] px-[40px] overflow-hidden'>\n            <div className='lg:flex lg:flex-col lg:gap-[20px] md:flex md:flex-col md:gap-[20px] lg:items-start md:items-start flex flex-col items-center gap-[30px]'>\n                <HomePanel occupation={occupation} time={time} person={selectedPerson}/>\n                <div className='lg:flex lg:gap-[20px] md:flex md:gap-[12px] flex gap-[12px] transition-all duration-500'>\n                    {people.map(person => (\n                        <HomePanelPersons\n                            selected={selectedPerson}\n                            key={person.id}\n                            person={person}\n                            onClick={() => handlePersonClick(person)} // Pass the click handler\n                        />\n                    ))}\n                </div>\n            </div>\n            <div className='lg:overflow-scroll md:overflow-scroll'>\n                <PopularPeople/>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}